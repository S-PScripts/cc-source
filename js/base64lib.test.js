const Base64=require("./base64lib.js");describe("Base64 encode/decode library",()=>{test("should have predictable methods and default to 8bit",()=>{expect(Base64).toBeDefined(),expect(Base64.constructor).toBe(Function);var e=new Base64(8);expect(e).toHaveProperty("encode"),expect(e).toHaveProperty("decode"),expect(e).toHaveProperty("escaping"),expect(e).toHaveProperty("toSolidBytes"),expect(e).toHaveProperty("bit"),expect(e.bit).toBe(8),e=new Base64(16),expect(e.bit).toBe(16),e=new Base64(128),expect(e.bit).toBe(8),e=new Base64,expect(e.bit).toBe(8)}),test("should encode compliant Base64 and decode to match the input",()=>{var e=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,t="Ħ€ǁǿ ɰṏ®ʆď - http://say:hello@world.com/?kilroy=was+here&now=gone#!extinct\n\rfin!";const o=new Base64(16),c=new Base64(8);var a=o.encode(t),n=c.encode(t);expect(a.constructor).toBe(String),expect(n.constructor).toBe(String),expect(a).toMatch(e),expect(n).toMatch(e);var r=a.length,e=n.length;expect(r).toBe(216),expect(e).toBe(124);a=o.decode(a),n=c.decode(n);expect(a).toEqual(t),expect(n).toEqual(t)})});