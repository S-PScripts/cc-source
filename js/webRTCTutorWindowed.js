var NSLibrary=NSLibrary||{};NSLibrary.Client=NSLibrary.Client||{},NSLibrary.Client.webRTCTutorWindowed=NSLibrary.Client.webRTCTutorWindowed||{},function(n){function i(){"false"==localStorage.screenLocked&&chrome.runtime.sendMessage({getWindow:!0,windowId:n.lockWindow,data:{}},function(e){e||(n.removeWebRTCTutorWindowed(),n.showWebRTCTutorWindowed(n.webRTCURL))})}n.lockWindow=-1,n.lockInterval=void 0,n.webRTCURL=void 0,n.showWebRTCTutorWindowed=function(o){chrome.runtime.sendMessage({createWindow:!0,windowData:{url:o,type:"popup",width:screen.width-200,height:screen.height-100}},function(e){n.lockWindow=e.id,localStorage.windowedTutorWatch=e.id,n.webRTCURL=o,n.lockInterval=window.setInterval(i,1e3)})},n.removeWebRTCTutorWindowed=function(){window.clearInterval(n.lockInterval),-1<n.lockWindow&&chrome.runtime.sendMessage({windowsGetAll:!0,winData:{windowTypes:["popup"]}},function(e){e.forEach(function(e){e.id==localStorage.windowedTutorWatch&&chrome.runtime.sendMessage({removeWindow:!0,windowId:e.id})})}),n.lockWindow=-1}}(NSLibrary.Client.webRTCTutorWindowed);